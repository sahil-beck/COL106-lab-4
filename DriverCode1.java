import java.util.*;

public class DriverCode1 {
    private static int arrays[][] = {
        {8,12,6},
        {1,2,5},
        {1,1,1,1,1},
        {5,4,4,3,2},
        {5,4,4,3,2},
        {758,334,402,1792,1112,1436,1534,1702,1538,1427,720,1424,114,1604,564,120,578},
        {4,634,1059,798,736,1102,1798,1198,1566,1293,165,1146,1314,1068,1555,448,839},
        {824,812,1281,742,293,602,1464,1982,160,1526,1220,404,1790,1892,1780,1376,1098,1394,1612},
        {369,691,379,191,333,595,187,800,161,97,436,488,505,313,89,943,91,875,672,71,854,936,570,813,363,987,359,269,439,899,961,112,986,848,792,775,13,298,490,715,541,967,964,179,767,278,845,223,305,603,407,745,260,533,795,629,609,53,781,365,782,674,525,985,55,940,525,753,805,659,642,593,911,871,556,517,863,839,767,291,723,676,213,650,627,716,373,55,889,437,507,950,615,13,417,109},
        {550,161,653,705,91,753,653,559,768,803,978,915,265,87,48,816,165,555,753,119,358,51,959,331,32,535,339,242,761,936,837,266,57,467,966,53,520,446,825,777,924,428,229,301,533,936,110,387,639,107,736,21,174,146,673,61,71,310,255,887,871,455,510,11,391,66,918,386,335,325,677,48,324,923,848,899,288,201,588,766,274,791,852,9,363,458,201,656,623,286,367,539,679,299,73,35,698,314,866,794}
    };
    private static int targets[][] = {
        {2,14,10},
        {4,1,3},
        {1,1,1,1,1},
        {1,2,3,4,5},
        {1,2,2,3,4},
        {1670,216,1392,1828,1104,464,678,1134,644,1178,1150,1608,1799,1156,244,2,892},
        {171,1775,1412,163,1004,854,716,1839,182,2000,696,1999,296,1152,478,306,1680},
        {2000,757,648,1790,706,887,1482,518,2000,868,2000,1578,170,2000,548,986,180,2000,1134},
        {577,510,653,833,676,459,45,194,597,55,623,999,941,127,751,891,167,959,391,967,567,41,669,781,569,999,864,263,801,909,946,37,203,814,855,799,225,261,205,851,833,999,301,720,987,146,187,154,359,839,977,38,714,163,903,169,756,841,982,432,281,66,67,637,269,303,880,235,127,301,407,969,645,589,941,899,758,768,469,690,225,528,463,234,466,561,953,520,978,651,243,443,143,773,839,242},
        {557,371,345,603,239,491,902,572,133,517,33,15,523,798,457,122,215,900,61,943,163,215,9,737,316,962,457,140,974,134,401,850,899,414,225,246,579,503,267,195,578,111,418,701,28,7,348,623,265,903,864,280,332,245,489,905,819,399,830,785,29,492,614,871,51,365,715,487,190,7,629,575,410,847,809,16,328,942,817,498,691,945,737,891,142,342,696,157,265,719,466,786,78,474,338,818,134,111,848,347}
    };
    private static int answers[] = {2, 1, 0, -1, -1, 645, 1149, 942, 1446, 800};

    public static void eval(int tc) {
        int A[] = arrays[tc];
        int target[] = targets[tc];

        int n = A.length;
        if (n < 20) {
            System.out.println("Test case description");
            System.out.print("Array A: ");
            for (int i=0; i<n; i++) {
                System.out.print(A[i] + " ");
            }
            System.out.println();
            System.out.print("Target Array: ");
            for (int i=0; i<n; i++) {
                System.out.print(target[i] + " ");
            }
            System.out.println();
        }

        SimilarArrays sa = new SimilarArrays();
        if (sa.minSteps(A, target) == answers[tc]) System.out.println("Passed");
        else System.out.println("Failed\nYour Output: "+sa.minSteps(A, target)+"\nExpected Output: "+answers[tc]);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        String s = sc.next();
        // Entering 'COL106' when you run this code will run it on given testcases. 
        // Entering any other random string will allow you to input your own testcases.
        if (s.equals("COL106")) {
            for (int tc = 0; tc < 10; tc++) {
                System.out.println(String.format("case=#%d/10", (tc+1)));
                eval(tc);
            }
            // int tc = sc.nextInt() -1;
            // eval(tc);
        } else {
            System.out.print("Enter number of elements in array: ");
            int n = sc.nextInt();
            SimilarArrays sa = new SimilarArrays();
            System.out.print("Enter elements of array A: ");
            int arr[] = new int[n];
            for (int i=0; i<n; i++) arr[i] = sc.nextInt(); 
            System.out.print("Enter elements of target array: ");
            int target[] = new int[n];
            for (int i=0; i<n; i++) target[i] = sc.nextInt(); 
            System.out.println("Your output: " + sa.minSteps(arr, target));
        }
    }
}
